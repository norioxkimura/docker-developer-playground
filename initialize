#!/bin/bash

set -eu

this_dir="$(dirname "$0")"

PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'

in_uid='1000'
in_gid='1000'
in_tz='Asia/Tokyo'

ln -sf "/usr/share/zoneinfo/$in_tz" /etc/localtime && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure tzdata

apt-get update
apt-get install -y sudo netcat-openbsd locales-all
apt-get -y dist-upgrade

### user 'ubuntu'

rm -rf /etc/skel/.??*
rm -rf /etc/skel/*
mkdir -m 700 /etc/skel/.ssh
if ! grep -qs '[^:]*:[^:]*:'$in_gid':' /etc/group; then
    addgroup --gid $in_gid ubuntu
fi
useradd --uid $in_uid --gid $in_gid --create-home --shell /bin/bash --no-log-init --password '*' ubuntu
    # use useradd instead of adduser to avoid bugs of Docker on Mac for
    # handling big sparse files (/var/log/lastlog in this case).
    # the option '--no-log-init' is the key.
    # see https://github.com/docker/docker/issues/5419
adduser ubuntu sudo
adduser ubuntu adm
echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/ubuntu

### essentials

apt-get install -y                                                          \
    build-essential bzip2 unzip tree realpath net-tools                     \
    software-properties-common apt-transport-https curl python sudo git tig

# Java

{
    echo 'debconf shared/accepted-oracle-license-v1-1 select true'
    echo 'debconf shared/accepted-oracle-license-v1-1 seen true'
} | debconf-set-selections

apt-add-repository ppa:webupd8team/java
apt-get update
apt-get install -y oracle-java8-installer

### SBT

echo 'deb https://dl.bintray.com/sbt/debian /' > /etc/apt/sources.list.d/sbt.list
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
apt-get update
apt-get install -y sbt

### .NET

cat <<'^Z' > /etc/apt/sources.list.d/dotnetdev.list
deb [arch=amd64] https://apt-mo.trafficmanager.net/repos/dotnet-release/ xenial main
^Z
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 417A0893
apt-get update
apt-get install -y dotnet-dev-1.0.4

### Scala

cat <<'^Z' | sudo -Hsu ubuntu
cd
mkdir t t/project
cd t
cat <<'^^Z' > App.scala
object App {
  def main(args: Array[String]): Unit = {
    println("Hello, world!")
  }
}
^^Z
cat <<'^^Z' > build.sbt
lazy val a = project in file(".")
scalaVersion := "2.11.11"
^^Z
cat <<'^^Z' > project/build.properties
sbt.version=0.13.15
^^Z
while ! yes q | sbt update; do
    :
done
while ! yes q | sbt compile; do
    :
done
cd
rm -rf t
^Z

### Node

curl -sL 'https://deb.nodesource.com/setup_6.x' | bash -
apt-get install -y nodejs

### Yarn

curl -sL 'https://dl.yarnpkg.com/debian/pubkey.gpg' | apt-key add -
echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list
apt-get update
apt-get install -y yarn

